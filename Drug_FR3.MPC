\Right Nose Poke for Drug Delivery via Pump
\Written by Horia Pribiag (based on a Paul J Kenny drug self-admin program)
\Date MAY 9, 2016

\This section is for inputs
^LeftPoke = 1
^RightPoke = 2

\This section is for outputs
^Fan = 8 \ This is the Fan
^HouseLight = 7 \ This is the house light
^Reward = 6   \ In this code, this is a Pump delivering drug
^Sound = 5    \ In this code, this is a Sonalert

\DEFINED VARIABLES
\A = NUMBER OF ACTIVE Nose Pokes
\B = NUMBER OF INACTIVE Nose Pokes
\C = NUMBER of Rewards obtained
\D = Sound cue timer (sec)
\E = DATA ARRAY OF ACTIVE Nose Pokes (i.e. time stamp for each active nose poke)
\F = DATA ARRAY OF INACTIVE Nose Pokes (i.e. time stamp for each inactive nose poke)
\G = DATA ARRAY OF REWARDS delivered (i.e. time stamp for each reward delivered)
\L = Sound Cue Duration (sec)
\M = SESSION DURATION (min)
\N = SESSION TIMER (sec)
\Q = MAXIMUM REWARD
\X = FIXED RATIO
\Y = Pump duration timer (sec)


VAR_ALIAS Fixed ratio = X
VAR_ALIAS Session duration (min) = M
VAR_ALIAS Maximum reward (infusions) = Q
VAR_ALIAS Infusion Duration (sec) = T
VAR_ALIAS Sound Cue Duration (sec) = L

DIM E = 250
DIM F = 250
DIM G = 250

\ Z-PULSES USED IN THIS PROGRAM
\ Z1 = Z pulse indicating schedule completion.
\ Z3 = End of Session Signal.


\*************************************************************************************************************************************************
\Main control logic for Initial Priming Infusion, Poke Light control, Z pulse for reward delivery, and timeout period after completion of schedule
\*************************************************************************************************************************************************
S.S.1,
S1,
  0.001": SET X = 3; SET M = 120; SET Q = 45; SET T = 2.00; SET L = 0.5 ---> S2

S2,
  #START: ON ^Fan, ^Reward ---> S3

S3,
  4": OFF ^Reward ---> S4

S4,
  X#R^RightPoke: ON ^RightPoke; Z1 ---> S5

S5,
  10": OFF ^RightPoke ---> S4
  #Z3: ---> S1

\*******************************************************************************************
\This is the state set that contains the response count and display of the ACTIVE NosePoke
\*******************************************************************************************
S.S.2,
S1,
  #START: SHOW 2,ActivePokes,A ---> S2

S2,
  #R^RightPoke: ADD A; SET E(A) = N; SHOW 2,ActivePokes,A ---> SX
  #Z3: ---> S1


\*******************************************************************************************
\This is the state set that contains the response count and display of the INACTIVE NosePoke
\*******************************************************************************************
S.S.3,
S1,
  #START: SHOW 3,InactivePokes,B ---> S2

S2,
  #R^LeftPoke: ADD B; SET F(B) = N; SHOW 3,InactivePokes,B ---> SX
  #Z3: ---> S1


\*******************************************************************************************
\Main control logic for delivery of Reward after completion of schedule
\*******************************************************************************************
S.S.4,
S1,
  #Z1: ON ^Reward ---> S2

S2,
  0.01": SET Y = Y + 0.01;
      IF (Y >= T) [@True, @False]
        @True: OFF ^Reward; SHOW 5,LAST REWARD T,G(C)/60; SET Y = 0 ---> S1
        @False: ---> S2
  #Z3: ---> S1

\*******************************************************************************************
\Main control logic for Sound Cue after completion of schedule
\*******************************************************************************************
S.S.5,
S1,
  #Z1: ON ^Sound ---> S2

S2,
  0.01": SET D = D + 0.01;
      IF (D >= L) [@True, @False]
        @True: OFF ^Sound; SET D = 0 ---> S1
        @False: ---> S2
  #Z3: ---> S1

\*******************************************************************************************
\Reward counter
\*******************************************************************************************
S.S.6,
S1,
  #START: SHOW 4,REWARD,C ---> S2

S2,
  #Z1: ADD C; SET G(C) = N ; SHOW 4,REWARD,C ---> SX
  #Z3: ---> S1


\*******************************************************************************************
\Session Timer
\*******************************************************************************************
S.S.7,
S1,
  #START: SHOW 1,Time_min,N/60 ---> S2

S2,
  1": ADD N; SHOW 1, Time_min,N/60;
      IF (N/60 >= M) OR (C >= Q) [@True, @False]
        @True: Z3 ---> S3
        @False: ---> SX

S3,
  0.01": OFF ^HouseLight ---> S4

S4,
  3": OFF ^LeftPoke, ^RightPoke ---> STOPABORTFLUSH

